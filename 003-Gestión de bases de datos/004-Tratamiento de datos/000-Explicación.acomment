### 004-Tratamiento de datos

El tratamiento de datos en MySQL implica la manipulación y gestión eficiente de los datos almacenados en las bases de datos. A continuación, se describen en detalle los diferentes aspectos y operaciones relacionadas con el tratamiento de datos en MySQL.

#### 4.1. Inserción, borrado y modificación de registros

**Inserción de registros:**
La inserción de registros en una base de datos MySQL se realiza mediante la instrucción `INSERT`. Esta instrucción permite añadir nuevas filas a una tabla especificando los valores correspondientes a cada columna.

```sql
INSERT INTO nombre_tabla (columna1, columna2, columna3)
VALUES (valor1, valor2, valor3);
```

**Borrado de registros:**
El borrado de registros se lleva a cabo usando la instrucción `DELETE`. Esta instrucción elimina las filas que cumplen con una condición específica.

```sql
DELETE FROM nombre_tabla
WHERE condicion;
```

**Modificación de registros:**
Para modificar registros existentes, se utiliza la instrucción `UPDATE`, que permite cambiar los valores de una o más columnas en las filas que cumplen con una condición.

```sql
UPDATE nombre_tabla
SET columna1 = valor1, columna2 = valor2
WHERE condicion;
```

#### 4.2. Integridad referencial

La integridad referencial asegura que las relaciones entre tablas permanezcan consistentes. En MySQL, esto se logra utilizando claves foráneas (`FOREIGN KEY`). Una clave foránea en una tabla apunta a una clave primaria en otra tabla, garantizando que los valores en la columna de la clave foránea existan en la columna de la clave primaria.

```sql
CREATE TABLE tabla_hija (
    id INT PRIMARY KEY,
    id_padre INT,
    FOREIGN KEY (id_padre) REFERENCES tabla_padre(id)
);
```

#### 4.3. Subconsultas y composiciones en órdenes de edición

**Subconsultas:**
Una subconsulta es una consulta dentro de otra consulta. Se puede utilizar en operaciones de `INSERT`, `UPDATE` y `DELETE` para proporcionar valores o condiciones dinámicas.

```sql
UPDATE nombre_tabla
SET columna = (SELECT valor FROM otra_tabla WHERE condicion)
WHERE otra_condicion;
```

**Composiciones:**
Las composiciones permiten combinar datos de múltiples tablas. Las composiciones internas (`INNER JOIN`) y externas (`LEFT JOIN`, `RIGHT JOIN`) pueden ser usadas en las órdenes de edición para realizar operaciones más complejas.

```sql
DELETE t1 FROM tabla1 t1
INNER JOIN tabla2 t2 ON t1.id = t2.id
WHERE t2.condicion;
```

#### 4.4. Transacciones

Las transacciones permiten agrupar una serie de operaciones de base de datos en una única unidad de trabajo. En MySQL, se utilizan las instrucciones `START TRANSACTION`, `COMMIT` y `ROLLBACK` para gestionar transacciones.

```sql
START TRANSACTION;
INSERT INTO tabla (columna) VALUES (valor);
UPDATE tabla SET columna = valor WHERE condicion;
COMMIT; -- O ROLLBACK para deshacer los cambios
```

#### 4.5. Políticas de bloqueo. Concurrencia

**Políticas de bloqueo:**
El bloqueo en MySQL es esencial para evitar conflictos de concurrencia. Los bloqueos se utilizan para controlar el acceso a los datos durante las transacciones.

- **Bloqueo de filas:** Asegura que una fila específica no pueda ser modificada por otros usuarios hasta que se complete la transacción.
- **Bloqueo de tablas:** Asegura que una tabla completa no pueda ser modificada por otros usuarios.

```sql
LOCK TABLES nombre_tabla WRITE;
-- Operaciones de modificación
UNLOCK TABLES;
```

**Concurrencia:**
La concurrencia se refiere a la capacidad de múltiples usuarios para acceder y modificar la base de datos al mismo tiempo sin causar inconsistencias. MySQL maneja la concurrencia utilizando mecanismos de bloqueo y niveles de aislamiento de transacciones (`READ UNCOMMITTED`, `READ COMMITTED`, `REPEATABLE READ`, `SERIALIZABLE`).

```sql
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
START TRANSACTION;
-- Operaciones de base de datos
COMMIT;
```

Estos son los aspectos fundamentales del tratamiento de datos en MySQL. Comprender y aplicar estas técnicas es crucial para gestionar bases de datos de manera eficiente y asegurar la integridad y consistencia de los datos.