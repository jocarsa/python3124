### 7.1. Características de las bases de datos no relacionales

Las bases de datos no relacionales, también conocidas como NoSQL (Not Only SQL), representan una alternativa a las bases de datos relacionales tradicionales. Estas bases de datos están diseñadas para manejar grandes cantidades de datos no estructurados y semi-estructurados, y son especialmente útiles en aplicaciones que requieren alta escalabilidad y flexibilidad. A continuación, se describen las principales características de las bases de datos no relacionales:

#### 1. **Flexibilidad de Esquema**
   - **Sin Esquema Fijo:** A diferencia de las bases de datos relacionales, las bases de datos NoSQL no requieren un esquema fijo. Los datos pueden ser almacenados en cualquier formato, lo que permite una mayor adaptabilidad a cambios en los requisitos de la aplicación.
   - **Estructura Dinámica:** Los registros en bases de datos NoSQL pueden tener diferentes campos, lo que permite una estructura de datos más dinámica y adaptable.

#### 2. **Escalabilidad Horizontal**
   - **Distribución de Datos:** Las bases de datos NoSQL están diseñadas para escalar horizontalmente agregando más servidores en lugar de escalar verticalmente aumentando la capacidad de un solo servidor.
   - **Particionamiento:** Utilizan técnicas de particionamiento (sharding) para distribuir los datos a través de múltiples servidores, lo que mejora la capacidad de manejo de grandes volúmenes de datos y aumenta la disponibilidad.

#### 3. **Alto Rendimiento**
   - **Optimización para Operaciones Específicas:** Muchas bases de datos NoSQL están optimizadas para operaciones de lectura/escritura rápidas, lo que las hace adecuadas para aplicaciones de alta demanda.
   - **Bajo Tiempo de Latencia:** Ofrecen un bajo tiempo de respuesta en operaciones de lectura y escritura, incluso con grandes volúmenes de datos distribuidos.

#### 4. **Modelos de Datos Diversos**
   - **Documentos:** Almacenan datos en formatos como JSON, BSON o XML, permitiendo una representación rica y jerárquica de los datos.
   - **Claves-Valor:** Utilizan pares clave-valor donde cada clave es única y se asocia a un valor, lo que permite un acceso rápido y eficiente a los datos.
   - **Columnas:** Organizan los datos en columnas en lugar de filas, lo que es útil para aplicaciones que realizan consultas analíticas intensivas.
   - **Grafos:** Representan datos en nodos y relaciones, siendo ideales para aplicaciones que requieren navegar y analizar relaciones complejas entre datos.

#### 5. **Consistencia Eventual**
   - **Modelo BASE:** Muchas bases de datos NoSQL siguen el modelo BASE (Basically Available, Soft state, Eventual consistency) en lugar del modelo ACID (Atomicity, Consistency, Isolation, Durability) de las bases de datos relacionales. Esto significa que los datos eventualmente serán consistentes, pero no garantizan una consistencia inmediata.
   - **Tolerancia a Particiones:** Están diseñadas para seguir funcionando incluso si hay fallos de red o de partición, lo que las hace altamente disponibles y tolerantes a fallos.

#### 6. **Adecuadas para Grandes Volúmenes de Datos**
   - **Big Data:** Las bases de datos NoSQL son ideales para manejar grandes volúmenes de datos generados por aplicaciones de Big Data, ya que pueden procesar y almacenar datos de manera eficiente.
   - **Análisis en Tiempo Real:** Permiten el análisis de datos en tiempo real, lo que es crucial para aplicaciones que requieren respuestas rápidas basadas en datos en constante cambio.

#### 7. **Capacidades de Indexación y Consulta**
   - **Indexación Flexible:** Ofrecen capacidades de indexación flexibles que permiten consultas rápidas y eficientes.
   - **Consultas Ad Hoc:** Permiten realizar consultas ad hoc sobre los datos almacenados, proporcionando flexibilidad en la extracción y análisis de datos.

### Conclusión
Las bases de datos no relacionales ofrecen una solución poderosa y flexible para manejar grandes volúmenes de datos no estructurados y semi-estructurados. Su capacidad de escalar horizontalmente, junto con su alto rendimiento y flexibilidad de esquema, las hace adecuadas para una variedad de aplicaciones modernas, especialmente aquellas que requieren manejo de Big Data y análisis en tiempo real.