### 007-Uso de bases de datos no relacionales

#### 7.1. Características de las bases de datos no relacionales
Las bases de datos no relacionales, también conocidas como NoSQL (Not Only SQL), se diferencian de las bases de datos relacionales en varios aspectos clave:

1. **Flexibilidad del esquema**: A diferencia de las bases de datos relacionales, las NoSQL permiten un esquema flexible, lo que significa que los datos pueden almacenarse sin una estructura predefinida. Esto es útil para manejar datos semi-estructurados o no estructurados.
   
2. **Escalabilidad horizontal**: Las bases de datos NoSQL están diseñadas para escalar horizontalmente, lo que significa que pueden distribuirse en múltiples servidores o nodos, permitiendo un crecimiento más fácil y económico en comparación con la escalabilidad vertical de las bases de datos relacionales.
   
3. **Alto rendimiento**: Debido a su diseño, las bases de datos NoSQL pueden ofrecer un rendimiento superior en operaciones de lectura y escritura, especialmente en aplicaciones que manejan grandes volúmenes de datos.
   
4. **Modelos de datos variados**: NoSQL abarca una variedad de modelos de datos, incluyendo documentos, clave-valor, gráficos y columnas amplias, cada uno optimizado para diferentes tipos de aplicaciones y necesidades de datos.

#### 7.2. Tipos de bases de datos no relacionales
Las bases de datos NoSQL se dividen generalmente en cuatro categorías principales:

1. **Bases de datos de documentos**: Almacenan datos en documentos (generalmente en formato JSON, BSON o XML). Ejemplos populares incluyen MongoDB y CouchDB.
   
2. **Bases de datos clave-valor**: Almacenan datos como pares clave-valor, donde cada clave es única y se asocia a un valor. Ejemplos incluyen Redis y DynamoDB.
   
3. **Bases de datos de columnas amplias**: Almacenan datos en filas y columnas, pero a diferencia de las bases de datos relacionales, las columnas pueden variar entre filas. Ejemplos incluyen Cassandra y HBase.
   
4. **Bases de datos de grafos**: Almacenan datos en nodos y aristas, lo que es ideal para aplicaciones que involucran relaciones complejas entre datos. Ejemplos incluyen Neo4j y OrientDB.

#### 7.3. Elementos de las bases de datos no relacionales
Cada tipo de base de datos NoSQL tiene elementos únicos que facilitan su funcionamiento:

1. **Colecciones y Documentos**: En bases de datos de documentos, los datos se agrupan en colecciones que contienen documentos. Cada documento puede tener una estructura diferente y puede incluir anidamientos y arrays.
   
2. **Claves y Valores**: En bases de datos clave-valor, los datos se almacenan como pares clave-valor, permitiendo acceso directo a través de la clave.
   
3. **Filas y Columnas**: En bases de datos de columnas amplias, los datos se organizan en filas y columnas, donde cada fila puede tener un número variable de columnas.
   
4. **Nodos y Aristas**: En bases de datos de grafos, los nodos representan entidades y las aristas representan relaciones entre estas entidades, permitiendo consultas eficientes sobre relaciones complejas.

#### 7.4. Sistemas gestores de bases de datos no relacionales
Los sistemas gestores de bases de datos NoSQL son software diseñados para gestionar, almacenar y recuperar datos no relacionales. Algunos de los más populares incluyen:

1. **MongoDB**: Una base de datos de documentos que utiliza JSON para almacenar datos.
   
2. **Redis**: Una base de datos clave-valor en memoria, conocida por su velocidad y eficiencia.
   
3. **Cassandra**: Una base de datos de columnas amplias que ofrece alta disponibilidad y escalabilidad.
   
4. **Neo4j**: Una base de datos de grafos que permite modelar y consultar relaciones complejas.

#### 7.5. Herramientas de los sistemas gestores de bases de datos no relacionales para la gestión de la información almacenada
Las herramientas para gestionar datos en bases de datos NoSQL varían según el tipo de base de datos, pero generalmente incluyen:

1. **Interfaces de línea de comando (CLI)**: Herramientas como `mongo` para MongoDB o `redis-cli` para Redis permiten la interacción directa con la base de datos desde la línea de comandos.
   
2. **Interfaces gráficas (GUI)**: Aplicaciones como MongoDB Compass o RedisInsight proporcionan una interfaz visual para administrar y visualizar datos.
   
3. **APIs y SDKs**: Muchas bases de datos NoSQL ofrecen APIs y SDKs en varios lenguajes de programación para facilitar el desarrollo de aplicaciones.
   
4. **Herramientas de monitoreo y administración**: Herramientas como Prometheus para monitoreo y Grafana para visualización ayudan a supervisar el rendimiento y la salud de las bases de datos NoSQL.

En resumen, las bases de datos no relacionales ofrecen una alternativa flexible y escalable a las bases de datos relacionales, con una variedad de modelos y herramientas diseñadas para manejar diferentes tipos de datos y aplicaciones.