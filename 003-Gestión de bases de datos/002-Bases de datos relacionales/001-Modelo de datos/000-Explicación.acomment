### 002-Bases de datos relacionales\001-Modelo de datos

#### Introducción al Modelo de Datos Relacional

El modelo de datos relacional es uno de los modelos más utilizados para la gestión de bases de datos. Fue propuesto por Edgar F. Codd en 1970 y se basa en la teoría matemática de relaciones. Este modelo organiza los datos en tablas (o relaciones) que están compuestas por filas (tuplas) y columnas (atributos). La simplicidad y la robustez del modelo relacional han hecho que sea la elección preferida para una amplia variedad de aplicaciones empresariales y científicas.

#### Componentes del Modelo de Datos Relacional

1. **Tablas (Relaciones):**
   - Una tabla es una colección de datos organizados en un formato tabular de filas y columnas.
   - Cada tabla tiene un nombre único dentro de la base de datos y representa una entidad específica.
   - Las filas en una tabla representan instancias de la entidad, mientras que las columnas representan atributos de la entidad.

2. **Filas (Tuplas):**
   - Una fila en una tabla representa una instancia única de la entidad descrita por la tabla.
   - Cada fila contiene un conjunto de valores correspondientes a los atributos definidos por las columnas de la tabla.

3. **Columnas (Atributos):**
   - Las columnas definen las propiedades o características de la entidad representada por la tabla.
   - Cada columna tiene un nombre y un tipo de datos asociado, que determina el tipo de valores que puede contener (por ejemplo, enteros, texto, fechas).

4. **Dominios:**
   - Un dominio es un conjunto de valores permitidos para un atributo.
   - Define el tipo de datos y las restricciones que se pueden aplicar a los valores de una columna.

#### Características del Modelo de Datos Relacional

1. **Integridad de Datos:**
   - El modelo relacional utiliza varias restricciones para asegurar la integridad de los datos.
   - Ejemplos incluyen restricciones de unicidad (para claves primarias), restricciones de no nulo, y restricciones de integridad referencial (para claves ajenas).

2. **Independencia de Datos:**
   - El modelo proporciona independencia lógica y física de los datos, lo que significa que la estructura lógica de la base de datos puede cambiar sin afectar las aplicaciones que la utilizan.
   - La independencia física permite optimizar el almacenamiento y el rendimiento sin alterar la estructura lógica.

3. **Lenguaje de Consulta Estructurado (SQL):**
   - SQL es el lenguaje estándar utilizado para interactuar con bases de datos relacionales.
   - Permite realizar operaciones de consulta, inserción, actualización y eliminación de datos.

4. **Relaciones y Claves:**
   - Las relaciones entre tablas se establecen mediante claves primarias y claves ajenas.
   - Una clave primaria es un atributo (o conjunto de atributos) que identifica de manera única una fila en una tabla.
   - Una clave ajena es un atributo en una tabla que se refiere a la clave primaria de otra tabla, estableciendo una relación entre las dos tablas.

#### Ventajas del Modelo Relacional

1. **Simplicidad:**
   - La estructura tabular es fácil de entender y utilizar tanto para desarrolladores como para usuarios finales.
   
2. **Flexibilidad:**
   - Las tablas pueden ser fácilmente modificadas y extendidas sin grandes cambios en la estructura de la base de datos.
   
3. **Consistencia:**
   - Las restricciones y las reglas de integridad ayudan a mantener la consistencia y la exactitud de los datos.

4. **Escalabilidad:**
   - Las bases de datos relacionales pueden manejar grandes volúmenes de datos y usuarios concurrentes sin sacrificar el rendimiento.

#### Desventajas del Modelo Relacional

1. **Complejidad en Consultas:**
   - Las consultas complejas que involucran múltiples tablas pueden ser difíciles de escribir y optimizar.
   
2. **Rendimiento:**
   - Para ciertos tipos de aplicaciones, especialmente aquellas que requieren acceso en tiempo real a grandes volúmenes de datos no estructurados, las bases de datos relacionales pueden no ser las más eficientes.

3. **Rigidez en el Esquema:**
   - Las bases de datos relacionales requieren un esquema predefinido, lo que puede ser una limitación para aplicaciones con necesidades de datos muy dinámicas.

En resumen, el modelo de datos relacional es una herramienta poderosa y versátil para la gestión de datos estructurados. Su estructura basada en tablas y su fuerte énfasis en la integridad de datos lo hacen ideal para una amplia variedad de aplicaciones, aunque no es la solución perfecta para todos los escenarios.