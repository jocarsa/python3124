### 004-Tratamiento de datos
#### 004.3 Subconsultas y composiciones en órdenes de edición

En el contexto del tratamiento de datos en MySQL, las subconsultas y las composiciones en órdenes de edición juegan un papel fundamental para realizar operaciones complejas de manipulación de datos. Este apartado profundiza en cómo utilizar estas herramientas para insertar, actualizar y eliminar registros de manera eficaz y precisa.

#### 1. **Subconsultas en Órdenes de Edición**

##### 1.1 ¿Qué es una Subconsulta?
Una subconsulta es una consulta anidada dentro de otra consulta. En el contexto de órdenes de edición, una subconsulta puede ser utilizada para determinar los valores que serán insertados, actualizados o eliminados en la consulta principal.

##### 1.2 Uso de Subconsultas en INSERT

Las subconsultas pueden ser usadas dentro de una instrucción `INSERT` para insertar datos derivados de otra tabla. La sintaxis básica es la siguiente:

```sql
INSERT INTO tabla_destino (columna1, columna2)
SELECT columna1, columna2
FROM tabla_origen
WHERE condiciones;
```

**Ejemplo:**

```sql
INSERT INTO empleados_temporales (nombre, salario)
SELECT nombre, salario
FROM empleados
WHERE departamento = 'Ventas';
```

##### 1.3 Uso de Subconsultas en UPDATE

Las subconsultas también pueden ser empleadas dentro de una instrucción `UPDATE` para actualizar registros basados en valores de otras tablas.

```sql
UPDATE tabla_destino
SET columna1 = (SELECT valor
                FROM tabla_origen
                WHERE condiciones)
WHERE condiciones;
```

**Ejemplo:**

```sql
UPDATE empleados
SET salario = (SELECT AVG(salario)
               FROM empleados
               WHERE departamento = 'Ventas')
WHERE departamento = 'Marketing';
```

##### 1.4 Uso de Subconsultas en DELETE

En una instrucción `DELETE`, las subconsultas pueden determinar qué registros serán eliminados.

```sql
DELETE FROM tabla_destino
WHERE columna IN (SELECT columna
                  FROM tabla_origen
                  WHERE condiciones);
```

**Ejemplo:**

```sql
DELETE FROM empleados
WHERE id IN (SELECT id
             FROM empleados_temporales
             WHERE contrato = 'Finalizado');
```

#### 2. **Composiciones en Órdenes de Edición**

##### 2.1 ¿Qué es una Composición?

Una composición en órdenes de edición implica la combinación de datos de múltiples tablas en una sola operación de edición (INSERT, UPDATE, DELETE). Esto se logra utilizando joins (composiciones internas y externas).

##### 2.2 Uso de Composiciones en INSERT

Las composiciones pueden ser usadas en `INSERT` para combinar datos de múltiples tablas en una sola operación de inserción.

```sql
INSERT INTO tabla_destino (columna1, columna2)
SELECT t1.columna1, t2.columna2
FROM tabla1 t1
JOIN tabla2 t2 ON t1.clave = t2.clave
WHERE condiciones;
```

**Ejemplo:**

```sql
INSERT INTO empleados_proyecto (id_empleado, nombre_proyecto)
SELECT e.id, p.nombre
FROM empleados e
JOIN proyectos p ON e.id = p.id_empleado
WHERE p.fecha_inicio > '2023-01-01';
```

##### 2.3 Uso de Composiciones en UPDATE

Las composiciones pueden ser usadas en `UPDATE` para actualizar registros basados en datos combinados de múltiples tablas.

```sql
UPDATE tabla1 t1
JOIN tabla2 t2 ON t1.clave = t2.clave
SET t1.columna = t2.valor
WHERE condiciones;
```

**Ejemplo:**

```sql
UPDATE empleados e
JOIN bonos b ON e.id = b.id_empleado
SET e.salario = e.salario + b.valor
WHERE b.año = 2023;
```

##### 2.4 Uso de Composiciones en DELETE

Las composiciones pueden ser usadas en `DELETE` para eliminar registros basados en condiciones que implican múltiples tablas.

```sql
DELETE t1
FROM tabla1 t1
JOIN tabla2 t2 ON t1.clave = t2.clave
WHERE condiciones;
```

**Ejemplo:**

```sql
DELETE e
FROM empleados e
JOIN bajas b ON e.id = b.id_empleado
WHERE b.fecha_baja < '2023-01-01';
```

#### Conclusión

El uso de subconsultas y composiciones en órdenes de edición permite una manipulación de datos más flexible y potente en MySQL. Estas técnicas facilitan la ejecución de operaciones complejas que involucran múltiples tablas y condiciones, optimizando así la eficiencia y precisión en la gestión de bases de datos.